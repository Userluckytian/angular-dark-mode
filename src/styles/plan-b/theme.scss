/*
 * Implementation of themes
 */
@mixin themify($themes) {
  @each $theme, $map in $themes {
    // $theme = light $map = { ... }
    :host-context(.theme-#{$theme}) & {
      $theme-map: () !global; // 定义了全部变量
      @each $key, $submap in $map {
        $value: map-get(
          map-get($themes, $theme),
          "#{$key}"
        ); //  $value:  map-get(这个就$map, '#{$key}') // 自然获取的就是最终的值！
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global; // map-merge是合并的意思，将这些变量声明为了全局变量！
      }
      @content;
      $theme-map: null !global; // 又清空了全部变量
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}

// 其他文件的代码解释：

// @include themify($themes) {
// 在使用这个函数的过程中，theme的全局变量都在！然后这个时候就可以获取！
//   color: themed('textColor');
//   background-color: themed('backgroundColor');
// 该函数执行完成后，全局变量已经清空了！
// }

// 缺点：太消耗内存了！艹
